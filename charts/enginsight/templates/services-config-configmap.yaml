{{- if .Values.config.services }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "enginsight.fullname" . }}-services-config
  labels:
    {{- include "enginsight.labels" . | nindent 4 }}
data:
  config.json: |
    {
      "onpremise": {
        "twoFactor": {
          "enabled": {{ .Values.config.services.api.onpremise.twoFactor.enabled }}
        }
      },
      "api": {
        "url": "https://{{ (index .Values.services.server.ingress.hosts 0).host }}",
        "port": {{ .Values.config.services.api.port }},
        "timeout": {{ .Values.config.services.api.timeout }},
        "clientMaxBodySize": "{{ .Values.config.services.api.clientMaxBodySize }}",
        "cookies": {
          "maxAge": {{ .Values.config.services.api.cookies.maxAge }},
          "domain": "{{ .Values.config.services.api.cookies.domain }}",
          "path": "{{ .Values.config.services.api.cookies.path }}",
          "signed": {{ .Values.config.services.api.cookies.signed }}
        },
        "recaptcha": {
          "secret": "{{ .Values.config.services.api.recaptcha.secret }}",
          "host": "{{ .Values.config.services.api.recaptcha.host }}",
          "path": "{{ .Values.config.services.api.recaptcha.path }}",
          "method": "{{ .Values.config.services.api.recaptcha.method }}"
        },
        "headers": {{ .Values.config.services.api.headers | toJson }},
        "jwt": {
          "secret": "${JWT_SECRET}",
          "expiresIn": "{{ .Values.config.services.api.jwt.expiresIn }}"
        },
        "cors": {
          "origin": "https://{{ (index .Values.services.ui.ingress.hosts 0).host }}",
          "credentials": true
        }
      },
      "loopDelay": {{ .Values.config.services.loopDelay }},
      "database": {
        {{- if .Values.externalConnections.mongodb }}
        "uriConnectionString": "{{ .Values.externalConnections.mongodb }}"
        {{- else }}
        "uriConnectionString": "mongodb://{{ .Release.Name }}-mongodb-headless.{{ .Release.Namespace }}.svc.cluster.local:27017/enginsight?replicaSet=rs0"
        {{- end }}
      },
      {{- if .Values.externalConnections.redis }}
      "cache": "{{ .Values.externalConnections.redis }}",
      {{- else }}
      "cache": "redis://{{ .Release.Name }}-redis-master.{{ .Release.Namespace }}.svc.cluster.local:6379",
      {{- end }}
      "email": {
        "sender": "{{ .Values.config.services.email.sender }}",
        "host": "{{ .Values.config.services.email.host }}",
        "port": "{{ .Values.config.services.email.port }}",
        "sslTls": {{ .Values.config.services.email.sslTls }},
        "user": "{{ .Values.config.services.email.user }}",
        "pass": "{{ .Values.config.services.email.pass }}",
        "maxConnections": {{ .Values.config.services.email.maxConnections }},
        "rateDelta": {{ .Values.config.services.email.rateDelta }},
        "rateLimit": {{ .Values.config.services.email.rateLimit }}
      },
      "integrations": {
        "slack": {
          "clientId": "{{ .Values.config.services.integrations.slack.clientId }}",
          "clientSecret": "{{ .Values.config.services.integrations.slack.clientSecret }}"
        }
      },
      "cves": {
        {{- if .Values.externalConnections.mongodbCves }}
        "uriConnectionString": "{{ .Values.externalConnections.mongodbCves }}"
        {{- else }}
        "uriConnectionString": "mongodb://{{ .Release.Name }}-mongodb-cves-headless.{{ .Release.Namespace }}.svc.cluster.local:27017/cves"
        {{- end }}
      },
      "app": {
        "host": "https://{{ (index .Values.services.ui.ingress.hosts 0).host }}"
      },
      "sms": {
        "limit": {{ .Values.config.services.sms.limit }},
        "region": "{{ .Values.config.services.sms.region }}",
        "accessKeyId": "{{ .Values.config.services.sms.accessKeyId }}",
        "secretAccessKey": "{{ .Values.config.services.sms.secretAccessKey }}",
        "senderId": "{{ .Values.config.services.sms.senderId }}"
      }
    }
{{- end }}