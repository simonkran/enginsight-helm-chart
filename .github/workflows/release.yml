name: Release Charts

on:
  push:
    branches:
      - main

permissions:
  contents: write
  issues: write
  pull-requests: write
  packages: write
  id-token: write

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch main)
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --debug --target-branch main

  release:
    needs: lint-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.1

      - name: Add Helm repositories
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Update chart dependencies
        run: |
          find charts -name 'Chart.yaml' -exec helm dependency update "$(dirname {})" \;

      - name: Install dependencies
        run: npm install

      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Login to GitHub Container Registry
        if: success()
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Package and push charts to GHCR
        if: success()
        run: |
          # Get the latest tag created by semantic-release
          LATEST_TAG=$(git describe --tags --abbrev=0)
          VERSION=${LATEST_TAG#v}  # Remove 'v' prefix if present
          
          echo "Packaging chart version: $VERSION"
          
          # Update dependencies again (they may have been cleaned up)
          helm dependency update charts/enginsight
          
          # Package the chart
          helm package charts/enginsight --version $VERSION
          
          # Push to OCI registry
          if [ -f "enginsight-${VERSION}.tgz" ]; then
            echo "Pushing enginsight-${VERSION}.tgz to OCI registry..."
            helm push "enginsight-${VERSION}.tgz" oci://ghcr.io/${{ github.repository_owner }}/charts
          else
            echo "Chart package not found, skipping OCI push"
          fi